type Provider {
  providerID: ID!
  name: String!
  phone: String!
  email: String
  website: String
  description: String
  address: String
  latitude: String
  longitude: String
  acceptingNew: Boolean
  virtualAvailable: Boolean!
  reimbursementHandling: Boolean!
  insuranceCompaniesCompatible: [InsuranceCompany]!
  servicesCoveredName: [String]!
  deleted: Boolean
  # reviews: [Review]
  #listings: [String]
}

# type Review {
#   reviewID: ID!
#   user: User!
#   rating: Float!
#   comment: String
#   date: String
# }

# type ProviderType {
#   name: String!
# }

type Query {
  getProvidersBy: [Provider]
}

type Mutation {
  createProvider(input: CreateProviderInput): Provider
  updateProvider(providerID: ID!, input: UpdateProviderInput): Provider
  deleteProvider(providerID: ID!): Provider
}

input CreateProviderInput {
  name: String!
  phone: String!
  email: String
  website: String
  description: String
  address: String
  latitude: String
  longitude: String
  acceptingNew: Boolean
  virtualAvailable: Boolean!
  reimbursementHandling: Boolean!
  insuranceCompaniesCompatible: [ID]!
  servicesCoveredName: [String]!
}

input UpdateProviderInput {
  name: String!
  phone: String!
  email: String
  website: String
  description: String
  address: String
  latitude: String
  longitude: String
  acceptingNew: Boolean
  virtualAvailable: Boolean!
  reimbursementHandling: Boolean!
  insuranceCompaniesCompatible: [ID]!
  servicesCoveredName: [String]!
  deleted: Boolean
}
