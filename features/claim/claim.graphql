type Claim {
  claimID: ID!
  user: User!
  insurancePlan: InsurancePlan!
  amount: Float!
  date: String!
  reimbursementFiled: Boolean
  reimbursementReceived: Boolean
  serviceCovered: ServiceCovered!
  deleted: Boolean
  #provider: Provider
}

type Query {
  getUserClaimsBy(uid: ID!, insurancePlanID: ID, serviceCoveredID: ID): [Claim]
}

type Mutation {
  createClaim(input: CreateClaimInput!): Claim
  updateClaim(claimID: ID!, input: UpdateClaimInput!): Claim
  deleteClaim(claimID: ID!): Claim
  addClaimToUser(claimID: ID!, uid: ID!): Claim
}

input CreateClaimInput {
  uid: ID!
  insurancePlanID: ID!
  amount: Float!
  date: String!
  reimbursementFiled: Boolean
  reimbursementReceived: Boolean
  serviceCoveredID: ID!
}

input UpdateClaimInput {
  amount: Float
  date: String
  reimbursementFiled: Boolean
  reimbursementReceived: Boolean
  serviceCoveredID: ID
  deleted: Boolean
}
