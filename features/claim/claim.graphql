type Claim {
  claimID: ID!
  user: User!
  # userUid: ID!
  #provider: Provider
  amount: Float!
  date: String!
  reimbursementFiled: Boolean
  reimbursementReceived: Boolean
  service: ServiceCovered!
}

type Query {
  getClaim(claimID: ID!): Claim
  getClaims: [Claim]
}

type Mutation {
  createClaim(input: CreateClaimInput!): Claim
  updateClaim(claimID: ID!, input: UpdateClaimInput!): Claim
  addClaimToUser(claimID: ID!, uid: ID!): Claim
  removeClaimFromUser(claimID: ID!, uid: ID!): Claim
}

input CreateClaimInput {
  userID: ID!
  amount: Float!
  date: String!
  reimbursementFiled: Boolean
  reimbursementReceived: Boolean
  serviceID: ID!
}

input UpdateClaimInput {
  amount: Float
  date: String
  reimbursementFiled: Boolean
  reimbursementReceived: Boolean
  serviceID: ID
}
